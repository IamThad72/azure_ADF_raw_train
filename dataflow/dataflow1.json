{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataset_3S_NFL_Raw_Game_Statistics",
						"type": "DatasetReference"
					},
					"name": "sourceGameStatistics"
				},
				{
					"dataset": {
						"referenceName": "dataset_3S_NFL_Raw_Player_Profile",
						"type": "DatasetReference"
					},
					"name": "sourcePlayerProfile"
				},
				{
					"dataset": {
						"referenceName": "dataset_3s_NFL_Raw_League_HIerarchy",
						"type": "DatasetReference"
					},
					"name": "sourceLeagueHierarchy"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectGameStatistics"
				},
				{
					"name": "flattenAwayRushingRB"
				},
				{
					"name": "flattenHomeRushingRB"
				},
				{
					"name": "filterAwayRushRB"
				},
				{
					"name": "derivedAwayRush"
				},
				{
					"name": "derivedHomeRush"
				},
				{
					"name": "selectHomeRushing"
				},
				{
					"name": "selectAwayRushing"
				},
				{
					"name": "selectScheduleDateVenue"
				},
				{
					"name": "selectHomeReceiving"
				},
				{
					"name": "filterHomeRushRB"
				},
				{
					"name": "flattenHomeReceivingRB"
				},
				{
					"name": "derivedHomeRec"
				},
				{
					"name": "filterHomeRecRB"
				},
				{
					"name": "selectAllPlayers"
				},
				{
					"name": "filterRBs"
				},
				{
					"name": "selectAwayReceivingRB"
				},
				{
					"name": "flattenHomeReceiving"
				},
				{
					"name": "derivedAwayReceivingRB"
				},
				{
					"name": "filterAwayRecRB"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "flatten3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          status as string,",
				"          scheduled as string,",
				"          attendance as integer,",
				"          utc_offset as integer,",
				"          entry_mode as string,",
				"          clock as string,",
				"          quarter as integer,",
				"          summary as (season as (id as string, year as integer, type as string, name as string), week as (id as string, sequence as integer, title as string), venue as (id as string, name as string, city as string, state as string, zip as string, address as string, capacity as integer, surface as string, roof_type as string, sr_id as string, country as string, location as (lat as string, lng as string)), home as (id as string, name as string, market as string, alias as string, sr_id as string, used_timeouts as integer, remaining_timeouts as integer, points as integer), away as (id as string, name as string, market as string, alias as string, sr_id as string, used_timeouts as integer, remaining_timeouts as integer, points as integer)),",
				"          statistics as (home as (id as string, name as string, market as string, alias as string, sr_id as string, summary as (possession_time as string, avg_gain as double, safeties as integer, turnovers as integer, play_count as integer, rush_plays as integer, total_yards as integer, fumbles as integer, lost_fumbles as integer, penalties as integer, penalty_yards as integer, return_yards as integer), rushing as (totals as (avg_yards as double, attempts as integer, touchdowns as integer, tlost as integer, tlost_yards as integer, yards as integer, longest as integer, longest_touchdown as integer, redzone_attempts as integer), players as (id as string, name as string, jersey as string, position as string, avg_yards as integer, attempts as integer, touchdowns as integer, yards as integer, longest as integer, longest_touchdown as integer, redzone_attempts as integer)[]), receiving as (totals as (targets as integer, receptions as integer, avg_yards as double, yards as integer, touchdowns as integer, yards_after_catch as integer, longest as integer, longest_touchdown as integer, redzone_targets as integer, air_yards as integer), players as (id as string, name as string, jersey as string, position as string, receptions as integer, targets as integer, yards as integer, avg_yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, yards_after_catch as integer, redzone_targets as integer, air_yards as integer)[]), punts as (totals as (attempts as integer, yards as integer, net_yards as integer, blocked as integer, touchbacks as integer, inside_20 as integer, return_yards as integer, avg_net_yards as double, avg_yards as double, longest as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, yards as integer, avg_yards as double, blocked as integer, longest as integer, touchbacks as integer, inside_20 as integer, avg_net_yards as double, return_yards as integer, net_yards as integer)[]), punt_returns as (totals as (avg_yards as double, yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, faircatches as integer, number as integer), players as (id as string, name as string, jersey as string, position as string, yards as integer, avg_yards as integer, touchdowns as integer, longest as integer, faircatches as integer, longest_touchdown as integer, number as integer)[]), penalties as (totals as (penalties as integer, yards as integer), players as (id as string, name as string, jersey as string, position as string, penalties as integer, yards as integer)[]), passing as (totals as (attempts as integer, completions as integer, cmp_pct as double, interceptions as integer, sack_yards as integer, rating as double, touchdowns as integer, avg_yards as double, sacks as integer, longest as integer, longest_touchdown as integer, air_yards as integer, redzone_attempts as integer, net_yards as integer, yards as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, completions as integer, cmp_pct as integer, yards as integer, avg_yards as integer, sacks as integer, sack_yards as integer, touchdowns as integer, longest as integer, interceptions as integer, rating as double, longest_touchdown as integer, air_yards as integer, redzone_attempts as integer)[]), misc_returns as (totals as (yards as integer, touchdowns as integer, blk_fg_touchdowns as integer, blk_punt_touchdowns as integer, fg_return_touchdowns as integer, ez_rec_touchdowns as integer, number as integer, longest_touchdown as integer), players as string[]), kickoffs as (totals as (endzone as integer, inside_20 as integer, return_yards as integer, touchbacks as integer, yards as integer, out_of_bounds as integer, number as integer, total_endzone as integer, onside_attempts as integer, onside_successes as integer, squib_kicks as integer), players as (id as string, name as string, jersey as string, position as string, endzone as integer, inside_20 as integer, return_yards as integer, touchbacks as integer, yards as integer, out_of_bounds as integer, number as integer, total_endzone as integer)[]), kick_returns as (totals as (avg_yards as double, yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, faircatches as integer, number as integer), players as (id as string, name as string, jersey as string, position as string, avg_yards as integer, yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, faircatches as integer, number as integer)[]), int_returns as (totals as (avg_yards as double, yards as integer, touchdowns as integer, number as integer, longest as integer, longest_touchdown as integer), players as string[]), fumbles as (totals as (fumbles as integer, lost_fumbles as integer, own_rec as integer, own_rec_yards as integer, opp_rec as integer, opp_rec_yards as integer, out_of_bounds as integer, forced_fumbles as integer, own_rec_tds as integer, opp_rec_tds as integer, ez_rec_tds as integer), players as (id as string, name as string, jersey as string, position as string, fumbles as integer, lost_fumbles as integer, own_rec as integer, own_rec_yards as integer, opp_rec as integer, opp_rec_yards as integer, out_of_bounds as integer, forced_fumbles as integer, own_rec_tds as integer, opp_rec_tds as integer, ez_rec_tds as integer)[]), field_goals as (totals as (attempts as integer, made as integer, blocked as integer, yards as integer, avg_yards as double, longest as integer, net_attempts as integer, pct as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, made as integer, blocked as integer, yards as integer, avg_yards as integer, longest as integer, pct as integer)[]), defense as (totals as (tackles as integer, assists as integer, combined as integer, sacks as integer, sack_yards as integer, interceptions as integer, passes_defended as integer, forced_fumbles as integer, fumble_recoveries as integer, qb_hits as integer, tloss as integer, tloss_yards as integer, safeties as integer, sp_tackles as integer, sp_assists as integer, sp_forced_fumbles as integer, sp_fumble_recoveries as integer, sp_blocks as integer, misc_tackles as integer, misc_assists as integer, misc_forced_fumbles as integer, misc_fumble_recoveries as integer), players as (id as string, name as string, jersey as string, position as string, tackles as integer, assists as integer, combined as integer, sacks as integer, sack_yards as integer, interceptions as integer, passes_defended as integer, forced_fumbles as integer, fumble_recoveries as integer, qb_hits as integer, tloss as integer, tloss_yards as integer, safeties as integer, sp_tackles as integer, sp_assists as integer, sp_forced_fumbles as integer, sp_fumble_recoveries as integer, sp_blocks as integer, misc_tackles as integer, misc_assists as integer, misc_forced_fumbles as integer, misc_fumble_recoveries as integer)[]), extra_points as (kicks as (totals as (attempts as integer, blocked as integer, made as integer, pct as integer), players as string[]), conversions as (totals as (pass_attempts as integer, pass_successes as integer, rush_attempts as integer, rush_successes as integer, defense_attempts as integer, defense_successes as integer, turnover_successes as integer), players as string[])), first_downs as (pass as integer, penalty as integer, rush as integer, total as integer), interceptions as (return_yards as integer, returned as integer, number as integer), touchdowns as (pass as integer, rush as integer, total_return as integer, total as integer, fumble_return as integer, int_return as integer, kick_return as integer, punt_return as integer, other as integer), efficiency as (goaltogo as (attempts as integer, successes as integer, pct as double), redzone as (attempts as integer, successes as integer, pct as double), thirddown as (attempts as integer, successes as integer, pct as double), fourthdown as (attempts as integer, successes as integer, pct as integer))), away as (id as string, name as string, market as string, alias as string, sr_id as string, summary as (possession_time as string, avg_gain as double, safeties as integer, turnovers as integer, play_count as integer, rush_plays as integer, total_yards as integer, fumbles as integer, lost_fumbles as integer, penalties as integer, penalty_yards as integer, return_yards as integer), rushing as (totals as (avg_yards as double, attempts as integer, touchdowns as integer, tlost as integer, tlost_yards as integer, yards as integer, longest as integer, longest_touchdown as integer, redzone_attempts as integer), players as (id as string, name as string, jersey as string, position as string, avg_yards as integer, attempts as integer, touchdowns as integer, yards as integer, longest as integer, longest_touchdown as integer, redzone_attempts as integer)[]), receiving as (totals as (targets as integer, receptions as integer, avg_yards as double, yards as integer, touchdowns as integer, yards_after_catch as integer, longest as integer, longest_touchdown as integer, redzone_targets as integer, air_yards as integer), players as (id as string, name as string, jersey as string, position as string, receptions as integer, targets as integer, yards as integer, avg_yards as double, longest as integer, touchdowns as integer, longest_touchdown as integer, yards_after_catch as integer, redzone_targets as integer, air_yards as integer)[]), punts as (totals as (attempts as integer, yards as integer, net_yards as integer, blocked as integer, touchbacks as integer, inside_20 as integer, return_yards as integer, avg_net_yards as double, avg_yards as double, longest as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, yards as integer, avg_yards as double, blocked as integer, longest as integer, touchbacks as integer, inside_20 as integer, avg_net_yards as double, return_yards as integer, net_yards as integer)[]), punt_returns as (totals as (avg_yards as double, yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, faircatches as integer, number as integer), players as (id as string, name as string, jersey as string, position as string, yards as integer, avg_yards as integer, touchdowns as integer, longest as integer, faircatches as integer, longest_touchdown as integer, number as integer)[]), penalties as (totals as (penalties as integer, yards as integer), players as (id as string, name as string, jersey as string, position as string, penalties as integer, yards as integer)[]), passing as (totals as (attempts as integer, completions as integer, cmp_pct as double, interceptions as integer, sack_yards as integer, rating as double, touchdowns as integer, avg_yards as double, sacks as integer, longest as integer, longest_touchdown as integer, air_yards as integer, redzone_attempts as integer, net_yards as integer, yards as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, completions as integer, cmp_pct as double, yards as integer, avg_yards as double, sacks as integer, sack_yards as integer, touchdowns as integer, longest as integer, interceptions as integer, rating as double, longest_touchdown as integer, air_yards as integer, redzone_attempts as integer)[]), misc_returns as (totals as (yards as integer, touchdowns as integer, blk_fg_touchdowns as integer, blk_punt_touchdowns as integer, fg_return_touchdowns as integer, ez_rec_touchdowns as integer, number as integer), players as string[]), kickoffs as (totals as (endzone as integer, inside_20 as integer, return_yards as integer, touchbacks as integer, yards as integer, out_of_bounds as integer, number as integer, total_endzone as integer, onside_attempts as integer, onside_successes as integer, squib_kicks as integer), players as (id as string, name as string, jersey as string, position as string, endzone as integer, inside_20 as integer, return_yards as integer, touchbacks as integer, yards as integer, out_of_bounds as integer, number as integer, total_endzone as integer)[]), kick_returns as (totals as (avg_yards as double, yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, faircatches as integer, number as integer), players as (id as string, name as string, jersey as string, position as string, avg_yards as integer, yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, faircatches as integer, number as integer)[]), int_returns as (totals as (avg_yards as double, yards as integer, touchdowns as integer, number as integer, longest as integer, longest_touchdown as integer), players as string[]), fumbles as (totals as (fumbles as integer, lost_fumbles as integer, own_rec as integer, own_rec_yards as integer, opp_rec as integer, opp_rec_yards as integer, out_of_bounds as integer, forced_fumbles as integer, own_rec_tds as integer, opp_rec_tds as integer, ez_rec_tds as integer), players as (id as string, name as string, jersey as string, position as string, fumbles as integer, lost_fumbles as integer, own_rec as integer, own_rec_yards as integer, opp_rec as integer, opp_rec_yards as integer, out_of_bounds as integer, forced_fumbles as integer, own_rec_tds as integer, opp_rec_tds as integer, ez_rec_tds as integer)[]), field_goals as (totals as (attempts as integer, made as integer, blocked as integer, yards as integer, avg_yards as double, longest as integer, net_attempts as integer, pct as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, made as integer, blocked as integer, yards as integer, avg_yards as double, longest as integer, pct as integer)[]), defense as (totals as (tackles as integer, assists as integer, combined as integer, sacks as integer, sack_yards as integer, interceptions as integer, passes_defended as integer, forced_fumbles as integer, fumble_recoveries as integer, qb_hits as integer, tloss as integer, tloss_yards as integer, safeties as integer, sp_tackles as integer, sp_assists as integer, sp_forced_fumbles as integer, sp_fumble_recoveries as integer, sp_blocks as integer, misc_tackles as integer, misc_assists as integer, misc_forced_fumbles as integer, misc_fumble_recoveries as integer, def_targets as integer, def_comps as integer, blitzes as integer, hurries as integer, knockdowns as integer, missed_tackles as integer), players as (id as string, name as string, jersey as string, position as string, tackles as integer, assists as integer, combined as integer, sacks as integer, sack_yards as integer, interceptions as integer, passes_defended as integer, forced_fumbles as integer, fumble_recoveries as integer, qb_hits as integer, tloss as integer, tloss_yards as integer, safeties as integer, sp_tackles as integer, sp_assists as integer, sp_forced_fumbles as integer, sp_fumble_recoveries as integer, sp_blocks as integer, misc_tackles as integer, misc_assists as integer, misc_forced_fumbles as integer, misc_fumble_recoveries as integer)[]), extra_points as (kicks as (totals as (attempts as integer, blocked as integer, made as integer, pct as integer), players as (id as string, name as string, jersey as string, position as string, attempts as integer, blocked as integer, made as integer, pct as integer)[]), conversions as (totals as (pass_attempts as integer, pass_successes as integer, rush_attempts as integer, rush_successes as integer, defense_attempts as integer, defense_successes as integer, turnover_successes as integer), players as string[])), first_downs as (pass as integer, penalty as integer, rush as integer, total as integer), interceptions as (return_yards as integer, returned as integer, number as integer), touchdowns as (pass as integer, rush as integer, total_return as integer, total as integer, fumble_return as integer, int_return as integer, kick_return as integer, punt_return as integer, other as integer), efficiency as (goaltogo as (attempts as integer, successes as integer, pct as double), redzone as (attempts as integer, successes as integer, pct as double), thirddown as (attempts as integer, successes as integer, pct as double), fourthdown as (attempts as integer, successes as integer, pct as integer)))),",
				"          {_comment} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 1,",
				"     format: 'document',",
				"     systemColumns: true) ~> sourceGameStatistics",
				"source(output(",
				"          name as string,",
				"          jersey as string,",
				"          last_name as string,",
				"          first_name as string,",
				"          abbr_name as string,",
				"          birth_date as string,",
				"          weight as integer,",
				"          height as integer,",
				"          position as string,",
				"          college as string,",
				"          status as string,",
				"          seasons as (id as string, year as integer, type as string, name as string, teams as (id as string, name as string, market as string, alias as string, sr_id as string, statistics as (games_played as integer, games_started as integer, rushing as (avg_yards as double, attempts as integer, touchdowns as integer, yards as integer, longest as integer, longest_touchdown as integer, redzone_attempts as integer, tlost as integer, tlost_yards as integer, first_downs as integer, broken_tackles as integer, kneel_downs as integer, scrambles as integer, yards_after_contact as integer), receiving as (receptions as integer, targets as integer, yards as integer, avg_yards as integer, longest as integer, touchdowns as integer, longest_touchdown as integer, yards_after_catch as integer, redzone_targets as integer, air_yards as integer, first_downs as integer, broken_tackles as integer, dropped_passes as integer, catchable_passes as integer, yards_after_contact as integer), penalties as (penalties as integer, yards as integer, first_downs as integer), kick_returns as (returns as integer, yards as integer, avg_yards as double, touchdowns as integer, longest as integer, faircatches as integer, longest_touchdown as integer), fumbles as (fumbles as integer, lost_fumbles as integer, own_rec as integer, own_rec_yards as integer, opp_rec as integer, opp_rec_yards as integer, out_of_bounds as integer, forced_fumbles as integer, own_rec_tds as integer, opp_rec_tds as integer, ez_rec_tds as integer), defense as (tackles as integer, assists as integer, combined as integer, sacks as integer, sack_yards as integer, interceptions as integer, passes_defended as integer, forced_fumbles as integer, fumble_recoveries as integer, qb_hits as integer, tloss as integer, tloss_yards as integer, safeties as integer, sp_tackles as integer, sp_assists as integer, sp_forced_fumbles as integer, sp_fumble_recoveries as integer, sp_blocks as integer, misc_tackles as integer, misc_assists as integer, misc_forced_fumbles as integer, misc_fumble_recoveries as integer, def_targets as integer, def_comps as integer, blitzes as integer, hurries as integer, knockdowns as integer, missed_tackles as integer, batted_passes as integer)))[])[],",
				"          {_comment} as string,",
				"          birth_place as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'document',",
				"     systemColumns: true) ~> sourcePlayerProfile",
				"source(output(",
				"          league as (id as string, name as string, alias as string),",
				"          conferences as (id as string, name as string, alias as string, divisions as (id as string, name as string, alias as string, teams as (id as string, name as string, market as string, alias as string, sr_id as string, founded as integer, owner as string, general_manager as string, president as string, mascot as string, championships_won as integer, championship_seasons as string, conference_titles as integer, division_titles as integer, playoff_appearances as integer, venue as (id as string, name as string, city as string, state as string, country as string, zip as string, address as string, capacity as integer, surface as string, roof_type as string, sr_id as string, location as (lat as string, lng as string)), franchise as (id as string, name as string, alias as string), team_colors as (type as string, hex_color as string, alpha as integer, rgb_color as (red as integer, green as integer, blue as integer))[])[])[])[],",
				"          {_comment} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'document',",
				"     systemColumns: true) ~> sourceLeagueHierarchy",
				"sourceGameStatistics select(mapColumn(",
				"          schedule = scheduled,",
				"          venue_id = summary.venue.id,",
				"          statistics",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectGameStatistics",
				"selectAwayRushing foldDown(unroll(awayRushing),",
				"     mapColumn(",
				"          player_id = awayRushing.id,",
				"          position = awayRushing.position,",
				"          attempts = awayRushing.attempts,",
				"          yards = awayRushing.yards,",
				"          avg_yards = awayRushing.avg_yards,",
				"          longest = awayRushing.longest,",
				"          touchdowns = awayRushing.longest_touchdown",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenAwayRushingRB",
				"selectHomeRushing foldDown(unroll(rushingStats),",
				"     mapColumn(",
				"          player_id = rushingStats.id,",
				"          position = rushingStats.position,",
				"          attempts = rushingStats.attempts,",
				"          yards = rushingStats.yards,",
				"          avg_yards = rushingStats.avg_yards,",
				"          longest = rushingStats.longest,",
				"          touchdowns = rushingStats.touchdowns",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenHomeRushingRB",
				"derivedAwayRush filter(position == 'RB') ~> filterAwayRushRB",
				"flattenAwayRushingRB derive(side = \"away\") ~> derivedAwayRush",
				"flattenHomeRushingRB derive(side = \"home\") ~> derivedHomeRush",
				"selectGameStatistics select(mapColumn(",
				"          rushingStats = statistics.home.rushing.players",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHomeRushing",
				"selectGameStatistics select(mapColumn(",
				"          awayRushing = statistics.home.rushing.players",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectAwayRushing",
				"selectGameStatistics select(mapColumn(",
				"          venue_id = statistics.away.receiving.players",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectScheduleDateVenue",
				"selectGameStatistics select(mapColumn(",
				"          homeReceiving = statistics.home.receiving.players",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHomeReceiving",
				"derivedHomeRush filter(position == 'RB') ~> filterHomeRushRB",
				"selectHomeReceiving foldDown(unroll(homeReceiving),",
				"     mapColumn(",
				"          player_id = homeReceiving.id,",
				"          position = homeReceiving.position,",
				"          targets = homeReceiving.targets,",
				"          receptions = homeReceiving.receptions,",
				"          yards = homeReceiving.yards,",
				"          avg_yards = homeReceiving.avg_yards,",
				"          yards_after_catch = homeReceiving.yards_after_catch,",
				"          touchdowns = homeReceiving.touchdowns,",
				"          longest_reception = homeReceiving.longest",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenHomeReceivingRB",
				"flattenHomeReceivingRB derive(side = \"home\") ~> derivedHomeRec",
				"derivedHomeRec filter(position == 'RB') ~> filterHomeRecRB",
				"sourcePlayerProfile select(mapColumn(",
				"          player_id = id,",
				"          birth_date,",
				"          weight,",
				"          height,",
				"          position,",
				"          birth_place",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectAllPlayers",
				"selectAllPlayers filter(position == 'RB') ~> filterRBs",
				"selectGameStatistics select(mapColumn(",
				"          awayReceiving = statistics.away.receiving.players",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectAwayReceivingRB",
				"selectAwayReceivingRB foldDown(unroll(awayReceiving),",
				"     mapColumn(",
				"          player_id = awayReceiving.id,",
				"          position = awayReceiving.position,",
				"          targets = awayReceiving.targets,",
				"          receptions = awayReceiving.receptions,",
				"          yards = awayReceiving.yards,",
				"          avg_yards = awayReceiving.avg_yards,",
				"          yards_after_catch = awayReceiving.yards_after_catch,",
				"          touchdowns = awayReceiving.touchdowns,",
				"          longest_reception = awayReceiving.longest",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenHomeReceiving",
				"flattenHomeReceiving derive(side = \"away\") ~> derivedAwayReceivingRB",
				"derivedAwayReceivingRB filter(position == 'RB') ~> filterAwayRecRB",
				"sourceLeagueHierarchy foldDown(unroll(conferences, conferences),",
				"     mapColumn(",
				"          conferences",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 foldDown(unroll(conferences.divisions),",
				"     mapColumn(",
				"          teams = conferences.divisions.teams",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"flatten2 foldDown(unroll(teams),",
				"     mapColumn(",
				"          team_id = teams.id,",
				"          team_name = teams.name,",
				"          lat = teams.venue.location.lat,",
				"          lng = teams.venue.location.lng,",
				"          surface = teams.venue.surface,",
				"          venue_id = teams.venue.id,",
				"          roof_type = teams.venue.roof_type",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten3"
			]
		}
	}
}